language: cpp
sudo: required

matrix:
  include:
    - os: linux
      compiler: gcc
      env: 
        - LAMMPS_INSTALL="mpi"
        - TESTS=""
        #- CMAKE_COVERAGE_FLAGS="-O0 -coverage"
        #- CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
      before_install:
        - sudo apt-get install gfortran
        - sudo apt-get install mpich libmpich-dev
        - sudo pip install mpi4py
        - sudo pip install numpy
        - sudo pip install -U pytest pytest-cov
    - os: osx
      addons:
        apt_packages:
          - gfortran
      env: 
        - LAMMPS_INSTALL="serial"
        - TESTS="not mpi"
        #- CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
        #- CMAKE_COVERAGE_FLAGS=""
      before_install:
        - brew update > /dev/null
        #- brew uninstall --ignore-dependencies gcc
        #- brew install gcc > /dev/null
        - which g++
        - which gfortran
        - export FC=gfortran
        - sudo pip install -U pytest pytest-cov
    - os: osx
      addons:
        apt_packages:
          - gfortran
      env: 
        - LAMMPS_INSTALL="serial"
        - TESTS="not mpi"
        - MPI=openmpi
        #- CODECOV_TOKEN="99465b5f-26b4-4487-8355-fbcac5249a05"
        #- CMAKE_COVERAGE_FLAGS=""
      before_install:
        - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update > /dev/null; fi
        - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install $MPI; fi
        - which g++
        - which gfortran
        - export FC=gfortran
        - sudo pip install -U pytest pytest-cov

install:
  # Make local install build
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=./install 
          -DCMAKE_C_FLAGS="$CMAKE_COVERAGE_FLAGS" 
          -DCMAKE_CXX_FLAGS="$CMAKE_COVERAGE_FLAGS" 
          -DCMAKE_Fortran_FLAGS="$CMAKE_COVERAGE_FLAGS" 
          ..
  - make
  - make install

  # Install lammps
  - cd ../../
  - git clone https://github.com/lammps/lammps.git
  - cd lammps/lib/message
  - python Install.py -m
  - cp cslib/src/libcsmpi.a cslib/src/libmessage.a
  - cp Makefile.lammps.nozmq Makefile.lammps
  - cd ../../src
  - make yes-standard
  - make no-gpu
  - make no-kim
  - make no-kokkos
  - make no-kspace
  - make no-latte
  - make no-meam
  - make no-mpiio
  - make no-mscg
  - make no-poems
  - make no-python
  - make no-reax
  - make no-voronoi
  - make no-user-qmmm
  #- make yes-user-mdi
  - make yes-message
  #- cd ../lib/mdi
  #- python Install.py -m gcc
  #- cd ../../src
  
  # Build LAMMPS
  - if test "${LAMMPS_INSTALL}" = 'serial'; then make mpi-stubs; fi
  - sed -i '/CCFLAGS/c\CCFLAGS = -g -O3 -std=c++11' MAKE/Makefile.mpi
  - make -j 4 "${LAMMPS_INSTALL}"
  
  # Return to the driver
  - cd ../../MDI_QMMM_Driver
  

script:
  - ls
  - ls MDI_QMMM_Driver
#  - cd ../tests
#  - pytest -vv --cov-report=xml --cov=MDI_Library -k "${TESTS}"

#after_success:
#  # get code coverage
#  - ls -a -l
#  - ls -a -l ../build/MDI_Library/CMakeFiles/mdi.dir
#  - bash <(curl -s https://codecov.io/bash)
